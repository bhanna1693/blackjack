var w=Object.defineProperty;var D=(a,e,r)=>e in a?w(a,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):a[e]=r;var k=(a,e,r)=>D(a,typeof e!="symbol"?e+"":e,r);import{d as $,r as v,D as g,c as f,a as B,o as n,b as c,e as i,F as m,f as P,n as j,g as x,_ as H,h as G,i as N,t as S,j as y,s as V,u as o,k as A,l as I}from"./index-BaZBcX_Q.js";class L{constructor(e){k(this,"playerType","player");k(this,"name","");k(this,"cards",[]);k(this,"id","");this.name=e.name,this.id=e.name,this.playerType=e.playerType??"player",this.cards=e.cards??[]}get isDealer(){return this.playerType==="dealer"}}class C extends L{constructor(){super(...arguments);k(this,"finalScore",0)}playerHit(r){this.cards.push(r.dealCard())}playerStand(){this.finalScore=this.getPlayerScore()}getPlayerScore(){return[...this.cards].sort((t,u)=>t.isAce?1:-1).reduce((t,u)=>{let l=0;return u.rank==="A"?t+11>21?l=1:l=11:["K","Q","J"].includes(u.rank)?l=10:l=parseInt(u.rank),t+l},0)}playerHasBlackjack(){return this.cards.length===2&&this.getPlayerScore()===21}isPlayerBlackjack(){return this.getPlayerScore()===21&&this.cards.length===2}isPlayerBusted(){return this.getPlayerScore()>21}}class W extends C{constructor(){super({name:"Dealer",playerType:"dealer",cards:[]})}}const z=$("blackjack",()=>{const a=v(new W),e=v([new C({name:"Brian"})]),r=v(0),t=v(new g),u=f(()=>r.value>e.value.length-1);function l(){t.value=new g,t.value.shuffle(),a.value.cards=[],a.value.finalScore=0,e.value.forEach(d=>{d.cards=[],d.finalScore=0});for(let d=0;d<2;d++)e.value.forEach(T=>T.cards.push(t.value.dealCard())),a.value.cards.push(t.value.dealCard());r.value=0}function h(){r.value++,u.value&&p()}function _(d){d.cards.push(t.value.dealCard()),(d.isPlayerBusted()||d.isPlayerBlackjack())&&s(d)}function s(d){d.playerStand(),h()}function p(){for(console.log("dealer turn");a.value.getPlayerScore()<17;)a.value.cards.push(t.value.dealCard());a.value.playerStand()}return{dealer:a,players:e,activePlayerIndex:r,deck:t,isDealersTurn:u,startGame:l,playerHit:_,playerStand:s,dealersTurn:p}}),E={key:0,class:"flex flex-col items-center"},F={class:"m-0 mt-1"},b=B({__name:"BlackjackHand",props:{cards:{}},setup(a){const e=a,r=f(()=>[...e.cards].sort((h,_)=>h.isAce?1:-1).reduce((h,_)=>{let s=0;return _.rank==="A"?h+11>21?s=1:s=11:["K","Q","J"].includes(_.rank)?s=10:s=parseInt(_.rank),h+s},0)),t=f(()=>r.value>21),u=f(()=>`${e.cards.length*5.5}rem`);return(l,h)=>l.cards.length?(n(),c("div",E,[i("div",{class:"flex content-center",style:G({maxWidth:u.value})},[(n(!0),c(m,null,P(l.cards,(_,s)=>(n(),c("div",{key:_.id,class:j(["overflow-hidden",{"overflow-visible":s===l.cards.length-1}])},[x(H,{card:_,class:"w-36"},null,8,["card"])],2))),128))],4),i("p",F,[N(" Total: "),i("span",{class:j({"text-red-500":t.value})},S(r.value),3)])])):y("",!0)}}),J={class:"flex flex-col justify-center items-center"},K={key:0,class:"dealer"},Q={class:"text-center"},M={key:0,class:"mt-4 flex flex-col items-center"},R={key:0,class:"text-error"},Y={key:1,class:"divider"},q={class:"players flex justify-between"},O={key:0},U={class:"mt-4 flex flex-col items-center"},X=i("div",{class:"text-primary mb-4"},"Your turn",-1),Z={class:"flex justify-center join join-horizontal"},ee=["onClick"],te=["onClick"],se={key:1,class:"text-error"},ae={key:2,class:"text-primary"},re={key:3,class:"text-error"},ne=i("div",{class:"text-success"},"Winner!",-1),ce={key:0,class:"text-accent"},le={class:"text-center"},oe={class:"flex items-center justify-center my-8"},ie=B({__name:"BlackjackGame",setup(a){const e=z(),{players:r,dealer:t,activePlayerIndex:u,isDealersTurn:l}=V(e);return(h,_)=>(n(),c(m,null,[i("section",J,[o(t).cards.length?(n(),c("div",K,[i("h3",Q,S(o(t).name),1),x(b,{cards:o(t).cards},null,8,["cards"]),o(l)?(n(),c("div",M,[o(t).isPlayerBusted()?(n(),c("div",R,"Dealer Busted!")):y("",!0)])):y("",!0)])):y("",!0),o(t)?(n(),c("hr",Y)):y("",!0),i("div",q,[(n(!0),c(m,null,P(o(r),(s,p)=>(n(),c("div",{key:s.name},[s.cards.length?(n(),c("div",O,[x(b,{cards:s.cards},null,8,["cards"]),i("div",U,[p===o(u)?(n(),c(m,{key:0},[X,i("div",Z,[i("button",{type:"button",class:"join-item btn btn-primary",onClick:d=>o(e).playerHit(s)}," Hit ",8,ee),i("button",{type:"button",class:"join-item btn btn-outline text-primary",onClick:d=>o(e).playerStand(s)}," Stay ",8,te)])],64)):s.isPlayerBusted()?(n(),c("div",se,"Busted!")):o(t).finalScore===s.finalScore?(n(),c("div",ae,"Push")):!o(t).isPlayerBusted()&&o(t).finalScore>s.finalScore?(n(),c("div",re,"Dealer Wins!")):(n(),c(m,{key:4},[ne,s.isPlayerBlackjack()?(n(),c("div",ce,"Blackjack!")):y("",!0)],64))]),i("h3",le,S(s.name),1)])):y("",!0)]))),128))])]),i("div",oe,[i("button",{type:"button",class:"btn btn-accent",onClick:_[0]||(_[0]=(...s)=>o(e).startGame&&o(e).startGame(...s))}," Start New Game ")])],64))}}),de={key:0},he=B({__name:"BlackjackView",setup(a){const e=v("init"),r=f(()=>e.value==="loading"),t=f(()=>e.value==="loaded");return A(()=>{e.value="loading",setTimeout(()=>{e.value="loaded"},500)}),(u,l)=>r.value?(n(),c("div",de,"Loading...")):t.value?(n(),I(ie,{key:1})):y("",!0)}});export{he as default};
